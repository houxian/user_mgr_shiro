<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiku.usermgr.store.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.qiku.usermgr.store.model.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="crate_date" jdbcType="BIGINT" property="crateDate" />
    <result column="update_date" jdbcType="BIGINT" property="updateDate" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, role_name, crate_date, update_date, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getRoleListByUid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    r.*
    from u_role r INNER JOIN u_user_role ur on ur.role_id = r.role_id
    WHERE
    ur.u_id =#{uid,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.Role" useGeneratedKeys="true">
    insert into u_role (role_id, role_name, crate_date, 
      update_date, `status`)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{crateDate,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=BIGINT}, #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.Role" useGeneratedKeys="true">
    insert into u_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="crateDate != null">
        crate_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="crateDate != null">
        #{crateDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiku.usermgr.store.model.Role">
    update u_role
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="crateDate != null">
        crate_date = #{crateDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiku.usermgr.store.model.Role">
    update u_role
    set role_id = #{roleId,jdbcType=BIGINT},
      role_name = #{roleName,jdbcType=VARCHAR},
      crate_date = #{crateDate,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=BIGINT},
      `status` = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>