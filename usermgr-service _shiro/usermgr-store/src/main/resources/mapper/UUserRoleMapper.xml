<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiku.usermgr.store.dao.UUserRoleMapper">
  <resultMap id="BaseResultMap" type="com.qiku.usermgr.store.model.UUserRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="create_date" jdbcType="BIGINT" property="createDate" />
    <result column="update_date" jdbcType="BIGINT" property="updateDate" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_id, role_id, create_date, update_date, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_user_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.UUserRole" useGeneratedKeys="true">
    insert into u_user_role (u_id, role_id, create_date, 
      update_date, `status`)
    values (#{uId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{createDate,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=BIGINT}, #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.UUserRole" useGeneratedKeys="true">
    insert into u_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiku.usermgr.store.model.UUserRole">
    update u_user_role
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiku.usermgr.store.model.UUserRole">
    update u_user_role
    set u_id = #{uId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=BIGINT},
      `status` = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findUserRoles" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from u_user_role
    where u_id = #{userId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByUserId" parameterType="java.lang.Long">
    delete from u_user_role
    where u_id = #{userId,jdbcType=BIGINT}
  </delete>
</mapper>