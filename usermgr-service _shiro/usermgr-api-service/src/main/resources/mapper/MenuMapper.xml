<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiku.usermgr.store.dao.MenuMapper">
  <resultMap id="BaseResultMap" type="com.qiku.usermgr.store.model.Menu">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="m_parent_id" jdbcType="BIGINT" property="mParentId" />
    <result column="m_url" jdbcType="VARCHAR" property="mUrl" />
    <result column="m_perms" jdbcType="VARCHAR" property="mPerms" />
    <result column="m_type" jdbcType="INTEGER" property="mType" />
    <result column="m_order_num" jdbcType="INTEGER" property="mOrderNum" />
    <result column="create_date" jdbcType="BIGINT" property="createDate" />
    <result column="update_date" jdbcType="BIGINT" property="updateDate" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, menu_id, m_name, m_parent_id, m_url, m_perms, m_type, m_order_num, create_date, 
    update_date, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.Menu" useGeneratedKeys="true">
    insert into u_menu (menu_id, m_name, m_parent_id, 
      m_url, m_perms, m_type, 
      m_order_num, create_date, update_date, 
      `status`)
    values (#{menuId,jdbcType=BIGINT}, #{mName,jdbcType=VARCHAR}, #{mParentId,jdbcType=BIGINT}, 
      #{mUrl,jdbcType=VARCHAR}, #{mPerms,jdbcType=VARCHAR}, #{mType,jdbcType=INTEGER}, 
      #{mOrderNum,jdbcType=INTEGER}, #{createDate,jdbcType=BIGINT}, #{updateDate,jdbcType=BIGINT}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qiku.usermgr.store.model.Menu" useGeneratedKeys="true">
    insert into u_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="mName != null">
        m_name,
      </if>
      <if test="mParentId != null">
        m_parent_id,
      </if>
      <if test="mUrl != null">
        m_url,
      </if>
      <if test="mPerms != null">
        m_perms,
      </if>
      <if test="mType != null">
        m_type,
      </if>
      <if test="mOrderNum != null">
        m_order_num,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="mName != null">
        #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mParentId != null">
        #{mParentId,jdbcType=BIGINT},
      </if>
      <if test="mUrl != null">
        #{mUrl,jdbcType=VARCHAR},
      </if>
      <if test="mPerms != null">
        #{mPerms,jdbcType=VARCHAR},
      </if>
      <if test="mType != null">
        #{mType,jdbcType=INTEGER},
      </if>
      <if test="mOrderNum != null">
        #{mOrderNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiku.usermgr.store.model.Menu">
    update u_menu
    <set>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=BIGINT},
      </if>
      <if test="mName != null">
        m_name = #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mParentId != null">
        m_parent_id = #{mParentId,jdbcType=BIGINT},
      </if>
      <if test="mUrl != null">
        m_url = #{mUrl,jdbcType=VARCHAR},
      </if>
      <if test="mPerms != null">
        m_perms = #{mPerms,jdbcType=VARCHAR},
      </if>
      <if test="mType != null">
        m_type = #{mType,jdbcType=INTEGER},
      </if>
      <if test="mOrderNum != null">
        m_order_num = #{mOrderNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiku.usermgr.store.model.Menu">
    update u_menu
    set menu_id = #{menuId,jdbcType=BIGINT},
      m_name = #{mName,jdbcType=VARCHAR},
      m_parent_id = #{mParentId,jdbcType=BIGINT},
      m_url = #{mUrl,jdbcType=VARCHAR},
      m_perms = #{mPerms,jdbcType=VARCHAR},
      m_type = #{mType,jdbcType=INTEGER},
      m_order_num = #{mOrderNum,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=BIGINT},
      `status` = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select m.* from u_menu m, u_user u, u_user_role ur, u_role_menu rm
  	where u.name = #{userName,jdbcType=VARCHAR} and u.u_id = ur.u_id
  	and ur.role_id = rm.role_id and rm.menu_id = m.menu_id
  </select>

  <select id="findAllMenu"  resultMap="BaseResultMap">
  	select * from u_menu
  </select>

  <select id="findMenuByUid" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select m.* from u_menu m, u_user u, u_user_role ur, u_role_menu rm
  	where u.u_id = #{uid,jdbcType=BIGINT} and u.u_id = ur.u_id
  	and ur.role_id = rm.role_id and rm.menu_id = m.menu_id
  </select>

</mapper>